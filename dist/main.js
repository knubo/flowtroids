!function(s){var h={};function v(l){if(h[l])return h[l].exports;var c=h[l]={i:l,l:!1,exports:{}};return s[l].call(c.exports,c,c.exports,v),c.l=!0,c.exports}v.m=s,v.c=h,v.d=function(s,h,l){v.o(s,h)||Object.defineProperty(s,h,{enumerable:!0,get:l})},v.r=function(s){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(s,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(s,"__esModule",{value:!0})},v.t=function(s,h){if(1&h&&(s=v(s)),8&h)return s;if(4&h&&"object"==typeof s&&s&&s.__esModule)return s;var l=Object.create(null);if(v.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:s}),2&h&&"string"!=typeof s)for(var c in s)v.d(l,c,function(h){return s[h]}.bind(null,c));return l},v.n=function(s){var h=s&&s.__esModule?function(){return s.default}:function(){return s};return v.d(h,"a",h),h},v.o=function(s,h){return Object.prototype.hasOwnProperty.call(s,h)},v.p="",v(v.s=0)}([function(s,h,v){"use strict";v.r(h);const l=[];class c{constructor(){this._bvh_parent=null,this._bvh_branch=!0,this._bvh_left=null,this._bvh_right=null,this._bvh_sort=0,this._bvh_min_x=0,this._bvh_min_y=0,this._bvh_max_x=0,this._bvh_max_y=0}static getBranch(){return l.length?l.pop():new c}static releaseBranch(s){l.push(s)}static sortBranches(s,h){return s.sort>h.sort?-1:1}}class o{constructor(){this._hierarchy=null,this._bodies=[],this._dirty_branches=[]}insert(s,h=!1){if(!h){const h=s._bvh;if(h&&h!==this)throw new Error("Body belongs to another collision system");s._bvh=this,this._bodies.push(s)}const v=s._polygon,l=s.x,o=s.y;v&&(s._dirty_coords||s.x!==s._x||s.y!==s._y||s.angle!==s._angle||s.scale_x!==s._scale_x||s.scale_y!==s._scale_y)&&s._calculateCoords();const i=s._bvh_padding,b=v?0:s.radius*s.scale,u=(v?s._min_x:l-b)-i,M=(v?s._min_y:o-b)-i,P=(v?s._max_x:l+b)+i,T=(v?s._max_y:o+b)+i;s._bvh_min_x=u,s._bvh_min_y=M,s._bvh_max_x=P,s._bvh_max_y=T;let O=this._hierarchy,j=0;if(O)for(;;){if(!O._bvh_branch){const h=O._bvh_parent,v=O._bvh_min_x,l=O._bvh_min_y,o=O._bvh_max_x,i=O._bvh_max_y,b=O._bvh_parent=s._bvh_parent=c.getBranch();b._bvh_parent=h,b._bvh_left=O,b._bvh_right=s,b._bvh_sort=j++,b._bvh_min_x=u<v?u:v,b._bvh_min_y=M<l?M:l,b._bvh_max_x=P>o?P:o,b._bvh_max_y=T>i?T:i,h?h._bvh_left===O?h._bvh_left=b:h._bvh_right=b:this._hierarchy=b;break}{const s=O._bvh_left,h=s._bvh_min_y,v=s._bvh_max_x,l=s._bvh_max_y,c=u<s._bvh_min_x?u:s._bvh_min_x,o=M<h?M:h,i=P>v?P:v,b=T>l?T:l,B=(i-c)*(b-o)-(v-s._bvh_min_x)*(l-h),C=O._bvh_right,S=C._bvh_min_x,A=C._bvh_min_y,F=C._bvh_max_x,R=C._bvh_max_y,k=u<S?u:S,E=M<A?M:A,N=P>F?P:F,I=T>R?T:R,H=(N-k)*(I-E)-(F-S)*(R-A);O._bvh_sort=j++,O._bvh_min_x=c<k?c:k,O._bvh_min_y=o<E?o:E,O._bvh_max_x=i>N?i:N,O._bvh_max_y=b>I?b:I,O=B<=H?s:C}}else this._hierarchy=s}remove(s,h=!1){if(!h){const h=s._bvh;if(h&&h!==this)throw new Error("Body belongs to another collision system");s._bvh=null,this._bodies.splice(this._bodies.indexOf(s),1)}if(this._hierarchy===s)return void(this._hierarchy=null);const v=s._bvh_parent,l=v._bvh_parent,o=v._bvh_left,i=o===s?v._bvh_right:o;if(i._bvh_parent=l,i._bvh_branch&&(i._bvh_sort=v._bvh_sort),l){l._bvh_left===v?l._bvh_left=i:l._bvh_right=i;let s=l;for(;s;){const h=s._bvh_left,v=h._bvh_min_x,l=h._bvh_min_y,c=h._bvh_max_x,o=h._bvh_max_y,i=s._bvh_right,b=i._bvh_min_x,u=i._bvh_min_y,M=i._bvh_max_x,P=i._bvh_max_y;s._bvh_min_x=v<b?v:b,s._bvh_min_y=l<u?l:u,s._bvh_max_x=c>M?c:M,s._bvh_max_y=o>P?o:P,s=s._bvh_parent}}else this._hierarchy=i;c.releaseBranch(v)}update(){const s=this._bodies,h=s.length;for(let v=0;v<h;++v){const h=s[v];let l=!1;if(l||h.padding===h._bvh_padding||(h._bvh_padding=h.padding,l=!0),!l){const s=h._polygon;s&&(h._dirty_coords||h.x!==h._x||h.y!==h._y||h.angle!==h._angle||h.scale_x!==h._scale_x||h.scale_y!==h._scale_y)&&h._calculateCoords();const v=h.x,c=h.y,o=s?0:h.radius*h.scale,i=s?h._min_x:v-o,b=s?h._min_y:c-o,u=s?h._max_x:v+o,M=s?h._max_y:c+o;l=i<h._bvh_min_x||b<h._bvh_min_y||u>h._bvh_max_x||M>h._bvh_max_y}l&&(this.remove(h,!0),this.insert(h,!0))}}potentials(s){const h=[],v=s._bvh_min_x,l=s._bvh_min_y,c=s._bvh_max_x,o=s._bvh_max_y;let i=this._hierarchy,b=!0;if(!i||!i._bvh_branch)return h;for(;i;){if(b){b=!1;let s=i._bvh_branch?i._bvh_left:null;for(;s&&s._bvh_max_x>=v&&s._bvh_max_y>=l&&s._bvh_min_x<=c&&s._bvh_min_y<=o;)s=(i=s)._bvh_branch?i._bvh_left:null}const u=i._bvh_branch,M=u?i._bvh_right:null;if(M&&M._bvh_max_x>v&&M._bvh_max_y>l&&M._bvh_min_x<c&&M._bvh_min_y<o)i=M,b=!0;else{u||i===s||h.push(i);let v=i._bvh_parent;if(!v)break;for(;v&&v._bvh_right===i;)v=(i=v)._bvh_parent;i=v}}return h}draw(s){const h=this._bodies,v=h.length;for(let l=0;l<v;++l)h[l].draw(s)}drawBVH(s){let h=this._hierarchy,v=!0;for(;h;){if(v){v=!1;let s=h._bvh_branch?h._bvh_left:null;for(;s;)s=(h=s)._bvh_branch?h._bvh_left:null}const l=h._bvh_branch,c=h._bvh_min_x,o=h._bvh_min_y,i=h._bvh_max_x,b=h._bvh_max_y,u=l?h._bvh_right:null;if(s.moveTo(c,o),s.lineTo(i,o),s.lineTo(i,b),s.lineTo(c,b),s.lineTo(c,o),u)h=u,v=!0;else{let s=h._bvh_parent;if(!s)break;for(;s&&s._bvh_right===h;)s=(h=s)._bvh_parent;h=s}}}}class i{constructor(){this.collision=!1,this.a=null,this.b=null,this.a_in_b=!1,this.a_in_b=!1,this.overlap=0,this.overlap_x=0,this.overlap_y=0}}function b(s,h,v=null,l=!0){const c=s._polygon,o=h._polygon;let i=!1;return v&&(v.a=s,v.b=h,v.a_in_b=!0,v.b_in_a=!0,v.overlap=null,v.overlap_x=0,v.overlap_y=0),c&&(s._dirty_coords||s.x!==s._x||s.y!==s._y||s.angle!==s._angle||s.scale_x!==s._scale_x||s.scale_y!==s._scale_y)&&s._calculateCoords(),o&&(h._dirty_coords||h.x!==h._x||h.y!==h._y||h.angle!==h._angle||h.scale_x!==h._scale_x||h.scale_y!==h._scale_y)&&h._calculateCoords(),l&&!function(s,h){const v=s._polygon,l=v?0:s.x,c=v?0:s.y,o=v?0:s.radius*s.scale,i=v?s._min_x:l-o,b=v?s._min_y:c-o,u=v?s._max_x:l+o,M=v?s._max_y:c+o,P=h._polygon,T=P?0:h.x,O=P?0:h.y,j=P?0:h.radius*h.scale,B=P?h._min_x:T-j,C=P?h._min_y:O-j,S=P?h._max_x:T+j,A=P?h._max_y:O+j;return i<S&&b<A&&u>B&&M>C}(s,h)||(c&&s._dirty_normals&&s._calculateNormals(),o&&h._dirty_normals&&h._calculateNormals(),i=c&&o?function(s,h,v=null){const l=s._coords.length,c=h._coords.length;if(2===l&&2===c){const l=s._coords,c=h._coords;return v&&(v.overlap=0),l[0]===c[0]&&l[1]===c[1]}const o=s._coords,i=h._coords,b=s._normals,u=h._normals;if(l>2)for(let s=0,h=1;s<l;s+=2,h+=2)if(M(o,i,b[s],b[h],v))return!1;if(c>2)for(let s=0,h=1;s<c;s+=2,h+=2)if(M(o,i,u[s],u[h],v))return!1;return!0}(s,h,v):c?u(s,h,v,!1):o?u(h,s,v,!0):function(s,h,v=null){const l=s.radius*s.scale,c=h.radius*h.scale,o=h.x-s.x,i=h.y-s.y,b=l+c,u=o*o+i*i;if(u>b*b)return!1;if(v){const s=Math.sqrt(u);v.a_in_b=l<=c&&s<=c-l,v.b_in_a=c<=l&&s<=l-c,v.overlap=b-s,v.overlap_x=o/s,v.overlap_y=i/s}return!0}(s,h,v)),v&&(v.collision=i),i}function u(s,h,v=null,l=!1){const c=s._coords,o=s._edges,i=s._normals,b=h.x,u=h.y,M=h.radius*h.scale,P=2*M,T=M*M,O=c.length;let j=!0,B=!0,C=null,S=0,A=0;if(2===O){const s=b-c[0],h=u-c[1],l=s*s+h*h;if(l>T)return!1;if(v){const v=Math.sqrt(l);C=M-v,S=s/v,A=h/v,B=!1}}else for(let s=0,h=1;s<O;s+=2,h+=2){const l=b-c[s],F=u-c[h],R=o[s],k=o[h],E=l*R+F*k,N=E<0?-1:E>R*R+k*k?1:0;let I=!1,H=0,V=0,t=0;if(v&&j&&l*l+F*F>T&&(j=!1),N){const h=-1===N,i=h?0===s?O-2:s-2:s===O-2?0:s+2,P=i+1,j=b-c[i],C=u-c[P],S=o[i],A=o[P],R=j*S+C*A;if((R<0?-1:R>S*S+A*A?1:0)===-N){const s=h?l:j,c=h?F:C,o=s*s+c*c;if(o>T)return!1;if(v){const h=Math.sqrt(o);I=!0,H=M-h,V=s/h,t=c/h,B=!1}}}else{const c=i[s],o=i[h],b=l*c+F*o,u=b<0?-b:b;if(b>0&&u>M)return!1;v&&(I=!0,H=M-b,V=c,t=o,(B&&b>=0||H<P)&&(B=!1))}I&&(null===C||C>H)&&(C=H,S=V,A=t)}return v&&(v.a_in_b=l?B:j,v.b_in_a=l?j:B,v.overlap=C,v.overlap_x=l?-S:S,v.overlap_y=l?-A:A),!0}function M(s,h,v,l,c=null){const o=s.length,i=h.length;if(!o||!i)return!0;let b=null,u=null,M=null,P=null;for(let h=0,c=1;h<o;h+=2,c+=2){const o=s[h]*v+s[c]*l;(null===b||b>o)&&(b=o),(null===u||u<o)&&(u=o)}for(let s=0,c=1;s<i;s+=2,c+=2){const o=h[s]*v+h[c]*l;(null===M||M>o)&&(M=o),(null===P||P<o)&&(P=o)}if(b>P||u<M)return!0;if(c){let s=0;if(b<M)if(c.a_in_b=!1,u<P)s=u-M,c.b_in_a=!1;else{const h=u-M,v=P-b;s=h<v?h:-v}else if(c.b_in_a=!1,u>P)s=b-P,c.a_in_b=!1;else{const h=u-M,v=P-b;s=h<v?h:-v}const h=c.overlap,o=s<0?-s:s;if(null===h||h>o){const h=s<0?-1:1;c.overlap=o,c.overlap_x=v*h,c.overlap_y=l*h}}return!1}class P{constructor(s=0,h=0,v=0){this.x=s,this.y=h,this.padding=v,this._circle=!1,this._polygon=!1,this._point=!1,this._bvh=null,this._bvh_parent=null,this._bvh_branch=!1,this._bvh_padding=v,this._bvh_min_x=0,this._bvh_min_y=0,this._bvh_max_x=0,this._bvh_max_y=0}collides(s,h=null,v=!0){return b(this,s,h,v)}potentials(){const s=this._bvh;if(null===s)throw new Error("Body does not belong to a collision system");return s.potentials(this)}remove(){const s=this._bvh;s&&s.remove(this,!1)}createResult(){return new i}static createResult(){return new i}}class T extends P{constructor(s=0,h=0,v=0,l=1,c=0){super(s,h,c),this.radius=v,this.scale=l}draw(s){const h=this.x,v=this.y,l=this.radius*this.scale;s.moveTo(h+l,v),s.arc(h,v,l,0,2*Math.PI)}}class O extends P{constructor(s=0,h=0,v=[],l=0,c=1,o=1,i=0){super(s,h,i),this.angle=l,this.scale_x=c,this.scale_y=o,this._polygon=!0,this._x=s,this._y=h,this._angle=l,this._scale_x=c,this._scale_y=o,this._min_x=0,this._min_y=0,this._max_x=0,this._max_y=0,this._points=null,this._coords=null,this._edges=null,this._normals=null,this._dirty_coords=!0,this._dirty_normals=!0,O.prototype.setPoints.call(this,v)}draw(s){(this._dirty_coords||this.x!==this._x||this.y!==this._y||this.angle!==this._angle||this.scale_x!==this._scale_x||this.scale_y!==this._scale_y)&&this._calculateCoords();const h=this._coords;if(2===h.length)s.moveTo(h[0],h[1]),s.arc(h[0],h[1],1,0,2*Math.PI);else{s.moveTo(h[0],h[1]);for(let v=2;v<h.length;v+=2)s.lineTo(h[v],h[v+1]);h.length>4&&s.lineTo(h[0],h[1])}}setPoints(s){const h=s.length;this._points=new Float64Array(2*h),this._coords=new Float64Array(2*h),this._edges=new Float64Array(2*h),this._normals=new Float64Array(2*h);const v=this._points;for(let l=0,c=0,o=1;l<h;++l,c+=2,o+=2){const h=s[l];v[c]=h[0],v[o]=h[1]}this._dirty_coords=!0}_calculateCoords(){const s=this.x,h=this.y,v=this.angle,l=this.scale_x,c=this.scale_y,o=this._points,i=this._coords,b=o.length;let u,M,P,T;for(let O=0,j=1;O<b;O+=2,j+=2){let b=o[O]*l,B=o[j]*c;if(v){const s=Math.cos(v),h=Math.sin(v),l=b;b=l*s-B*h,B=l*h+B*s}b+=s,B+=h,i[O]=b,i[j]=B,0===O?(u=M=b,P=T=B):(b<u?u=b:b>M&&(M=b),B<P?P=B:B>T&&(T=B))}this._x=s,this._y=h,this._angle=v,this._scale_x=l,this._scale_y=c,this._min_x=u,this._min_y=P,this._max_x=M,this._max_y=T,this._dirty_coords=!1,this._dirty_normals=!0}_calculateNormals(){const s=this._coords,h=this._edges,v=this._normals,l=s.length;for(let c=0,o=1;c<l;c+=2,o+=2){const i=c+2<l?c+2:0,b=s[i]-s[c],u=s[i+1]-s[o],M=b||u?Math.sqrt(b*b+u*u):0;h[c]=b,h[o]=u,v[c]=M?u/M:0,v[o]=M?-b/M:0}this._dirty_normals=!1}}class j extends O{constructor(s=0,h=0,v=0){super(s,h,[[0,0]],0,1,1,v),this._point=!0}}j.prototype.setPoints=void 0;class B{constructor(){this._bvh=new o}createCircle(s=0,h=0,v=0,l=1,c=0){const o=new T(s,h,v,l,c);return this._bvh.insert(o),o}createPolygon(s=0,h=0,v=[[0,0]],l=0,c=1,o=1,i=0){const b=new O(s,h,v,l,c,o,i);return this._bvh.insert(b),b}createPoint(s=0,h=0,v=0){const l=new j(s,h,v);return this._bvh.insert(l),l}createResult(){return new i}static createResult(){return new i}insert(...s){for(const h of s)this._bvh.insert(h,!1);return this}remove(...s){for(const h of s)this._bvh.remove(h,!1);return this}update(){return this._bvh.update(),this}draw(s){return this._bvh.draw(s)}drawBVH(s){return this._bvh.drawBVH(s)}potentials(s){return this._bvh.potentials(s)}collides(s,h,v=null,l=!0){return b(s,h,v,l)}}document.collision=function(){return new B},console.log("set in document")}]);